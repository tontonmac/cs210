import javax.swing.*;
import java.awt.*;
import java.util.*;

/**
 * @author Bob Wilson
 * @version 1.0, 12/20/2009
 * 
 * Applet with fractal pattern repetition using 
 * iterative drawing of triangles within triangles
 */

public class Iterative extends JApplet
{
  public void paint(Graphics screen)
  {
    screen.clearRect(0, 0, this.getWidth(), this.getHeight());
    screen.drawString("Mohamed Camara", 0 , 10);
    Corner x = new Corner(0, this.getHeight());
    Corner y = new Corner(this.getWidth(), this.getHeight());
    Corner z = new Corner(this.getWidth() / 2, 0);
    
    drawTriangle(screen, new Triangle(x, y, z));  
  }
  
  /** 
   * iterative version of drawing
   * Note: It can work with either stack or queue for saving triangles
   * in five places in the code below: comment/uncomment one or the other ***
   * The only difference is in the order that sub-triangles are drawn.
   */
  
  private void drawTriangle(Graphics screen, Triangle t)
  {
    // add your code here
    t.draw(getGraphics());
    
    Stack<Triangle> stack = new Stack<Triangle>();
    stack.push(t);
    
    while(!stack.isEmpty())
    {
      t = stack.pop();
      
      //t.draw(getGraphics());
      
      if(t.size()>Triangle.SMALLEST)
      {
        stack.push(t.getNextLevel(Triangle.CORNER_ONE));
        stack.push(t.getNextLevel(Triangle.CORNER_TWO));
        stack.push(t.getNextLevel(Triangle.CORNER_THREE));
        stack.push(t.getNextLevel(Triangle.EDGE_ONE));
        stack.push(t.getNextLevel(Triangle.EDGE_TWO));
        stack.push(t.getNextLevel(Triangle.EDGE_THREE)); 
          t.draw(screen);
      } 
    }
  }
}
    
